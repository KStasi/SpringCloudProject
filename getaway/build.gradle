plugins {
	id 'org.springframework.boot' version '2.2.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
}

group = 'ua.akondaur'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '13'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

repositories {
	mavenCentral()
	maven { url 'http://oss.jfrog.org/artifactory/oss-snapshot-local/' }
}

ext {
	set('springCloudVersion', "Hoxton.SR1")
	set('resilience4jVersion', "1.1.0")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.cloud:spring-cloud-config-client'
	implementation 'org.springframework.cloud:spring-cloud-starter-bus-amqp'

  	compile "io.github.resilience4j:resilience4j-circuitbreaker:${resilience4jVersion}"
  	compile "io.github.resilience4j:resilience4j-ratelimiter:${resilience4jVersion}"
  	compile "io.github.resilience4j:resilience4j-retry:${resilience4jVersion}"
  	compile "io.github.resilience4j:resilience4j-bulkhead:${resilience4jVersion}"
  	compile "io.github.resilience4j:resilience4j-cache:${resilience4jVersion}"
  	compile "io.github.resilience4j:resilience4j-timelimiter:${resilience4jVersion}"

	compile "io.github.resilience4j:resilience4j-spring-boot2:${resilience4jVersion}"
	compile "io.github.resilience4j:resilience4j-all:${resilience4jVersion}"
	compile "io.github.resilience4j:resilience4j-reactor:${resilience4jVersion}"

	implementation 'org.json:json:20171018'
	implementation 'com.netflix.hystrix:hystrix-javanica'
	implementation 'org.springframework.retry:spring-retry'

    compile "io.github.resilience4j:resilience4j-micrometer:${resilience4jVersion}"
	compile "io.micrometer:micrometer-registry-prometheus"

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
}
